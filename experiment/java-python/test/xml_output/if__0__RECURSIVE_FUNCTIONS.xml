<ns0:unit xmlns:ns0="http://www.srcML.org/srcML/src" filename="experiment/original/RECURSIVE_FUNCTIONS.java" language="Java" revision="1.0.0"><ns0:function><ns0:type><ns0:specifier>static</ns0:specifier> <ns0:name>void</ns0:name></ns0:type> <ns0:name>tower</ns0:name> <ns0:parameter_list>( <ns0:parameter><ns0:decl><ns0:type><ns0:name>int</ns0:name></ns0:type> <ns0:name>n</ns0:name></ns0:decl></ns0:parameter> , <ns0:parameter><ns0:decl><ns0:type><ns0:name>char</ns0:name></ns0:type> <ns0:name>sourcePole</ns0:name></ns0:decl></ns0:parameter> , <ns0:parameter><ns0:decl><ns0:type><ns0:name>char</ns0:name></ns0:type> <ns0:name>destinationPole</ns0:name></ns0:decl></ns0:parameter> , <ns0:parameter><ns0:decl><ns0:type><ns0:name>char</ns0:name></ns0:type> <ns0:name>auxiliaryPole</ns0:name></ns0:decl></ns0:parameter> )</ns0:parameter_list> <ns0:block>{<ns0:block_content> <ns0:expr_stmt><ns0:expr><ns0:call><ns0:name>tower</ns0:name> <ns0:argument_list>( <ns0:argument><ns0:expr><ns0:name>n</ns0:name> <ns0:operator>-</ns0:operator> <ns0:literal type="number">1</ns0:literal></ns0:expr></ns0:argument> , <ns0:argument><ns0:expr><ns0:name>sourcePole</ns0:name></ns0:expr></ns0:argument> , <ns0:argument><ns0:expr><ns0:name>auxiliaryPole</ns0:name></ns0:expr></ns0:argument> , <ns0:argument><ns0:expr><ns0:name>destinationPole</ns0:name></ns0:expr></ns0:argument> )</ns0:argument_list></ns0:call></ns0:expr> ;</ns0:expr_stmt> <ns0:expr_stmt><ns0:expr><ns0:call><ns0:name><ns0:name>System</ns0:name> <ns0:operator>.</ns0:operator> <ns0:name>out</ns0:name> <ns0:operator>.</ns0:operator> <ns0:name>printf</ns0:name></ns0:name> <ns0:argument_list>( <ns0:argument><ns0:expr><ns0:literal type="string">" Move &#226;&#150;&#129; the &#226;&#150;&#129; disk &#226;&#150;&#129; % d &#226;&#150;&#129; from &#226;&#150;&#129; % c &#226;&#150;&#129; to &#226;&#150;&#129; % c \n "</ns0:literal></ns0:expr></ns0:argument> , <ns0:argument><ns0:expr><ns0:name>n</ns0:name></ns0:expr></ns0:argument> , <ns0:argument><ns0:expr><ns0:name>sourcePole</ns0:name></ns0:expr></ns0:argument> , <ns0:argument><ns0:expr><ns0:name>destinationPole</ns0:name></ns0:expr></ns0:argument> )</ns0:argument_list></ns0:call></ns0:expr> ;</ns0:expr_stmt> <ns0:expr_stmt><ns0:expr><ns0:call><ns0:name>tower</ns0:name> <ns0:argument_list>( <ns0:argument><ns0:expr><ns0:name>n</ns0:name> <ns0:operator>-</ns0:operator> <ns0:literal type="number">1</ns0:literal></ns0:expr></ns0:argument> , <ns0:argument><ns0:expr><ns0:name>auxiliaryPole</ns0:name></ns0:expr></ns0:argument> , <ns0:argument><ns0:expr><ns0:name>destinationPole</ns0:name></ns0:expr></ns0:argument> , <ns0:argument><ns0:expr><ns0:name>sourcePole</ns0:name></ns0:expr></ns0:argument> )</ns0:argument_list></ns0:call></ns0:expr> ;</ns0:expr_stmt> </ns0:block_content>}</ns0:block></ns0:function>
</ns0:unit>