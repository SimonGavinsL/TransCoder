<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/FIND_THE_POINT_WHERE_MAXIMUM_INTERVALS_OVERLAP_1.java"><function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>maxOverlap</name> <parameter_list>( <parameter><decl><type><name><name>int</name> <index>[ ]</index></name></type> <name>start</name></decl></parameter> , <parameter><decl><type><name><name>int</name> <index>[ ]</index></name></type> <name>end</name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter> )</parameter_list> <block>{<block_content> <decl_stmt><decl><type><name>int</name></type> <name>maxa</name> <init>= <expr><call><name><name>Arrays</name> <operator>.</operator> <name>stream</name></name> <argument_list>( <argument><expr><name>start</name></expr></argument> )</argument_list></call> <operator>.</operator> <call><name>max</name> <argument_list>( )</argument_list></call> <operator>.</operator> <call><name>getAsInt</name> <argument_list>( )</argument_list></call></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name>maxb</name> <init>= <expr><call><name><name>Arrays</name> <operator>.</operator> <name>stream</name></name> <argument_list>( <argument><expr><name>end</name></expr></argument> )</argument_list></call> <operator>.</operator> <call><name>max</name> <argument_list>( )</argument_list></call> <operator>.</operator> <call><name>getAsInt</name> <argument_list>( )</argument_list></call></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name>maxc</name> <init>= <expr><call><name><name>Math</name> <operator>.</operator> <name>max</name></name> <argument_list>( <argument><expr><name>maxa</name></expr></argument> , <argument><expr><name>maxb</name></expr></argument> )</argument_list></call></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name><name>int</name> <index>[ ]</index></name></type> <name>x</name> <init>= <expr><operator>new</operator> <name><name>int</name> <index>[ <expr><name>maxc</name> <operator>+</operator> <literal type="number">2</literal></expr> ]</index></name></expr></init></decl> ;</decl_stmt> <expr_stmt><expr><call><name><name>Arrays</name> <operator>.</operator> <name>fill</name></name> <argument_list>( <argument><expr><name>x</name></expr></argument> , <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <decl_stmt><decl><type><name>int</name></type> <name>cur</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> , <decl><type ref="prev"/><name>idx</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</decl_stmt> <for>for <control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr> )</control> <block>{<block_content> <expr_stmt><expr><operator>++</operator> <name><name>x</name> <index>[ <expr><name><name>start</name> <index>[ <expr><name>i</name></expr> ]</index></name></expr> ]</index></name></expr> ;</expr_stmt> <expr_stmt><expr><operator>--</operator> <name><name>x</name> <index>[ <expr><name><name>end</name> <index>[ <expr><name>i</name></expr> ]</index></name> <operator>+</operator> <literal type="number">1</literal></expr> ]</index></name></expr> ;</expr_stmt> </block_content>}</block></for> <decl_stmt><decl><type><name>int</name></type> <name>maxy</name> <init>= <expr><name><name>Integer</name> <operator>.</operator> <name>MIN_VALUE</name></name></expr></init></decl> ;</decl_stmt> <for>for <control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>maxc</name></expr> ;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr> )</control> <block>{<block_content> <expr_stmt><expr><name>cur</name> <operator>+=</operator> <name><name>x</name> <index>[ <expr><name>i</name></expr> ]</index></name></expr> ;</expr_stmt> <if_stmt><if>if <condition>( <expr><name>maxy</name> <operator>&lt;</operator> <name>cur</name></expr> )</condition> <block>{<block_content> <expr_stmt><expr><name>maxy</name> <operator>=</operator> <name>cur</name></expr> ;</expr_stmt> <expr_stmt><expr><name>idx</name> <operator>=</operator> <name>i</name></expr> ;</expr_stmt> </block_content>}</block></if></if_stmt> </block_content>}</block></for> <expr_stmt><expr><call><name><name>System</name> <operator>.</operator> <name>out</name> <operator>.</operator> <name>println</name></name> <argument_list>( <argument><expr><literal type="string">" Maximum â value â is : "</literal> <operator>+</operator> <name>maxy</name> <operator>+</operator> <literal type="string">" â at â position : â "</literal> <operator>+</operator> <name>idx</name> <operator>+</operator> <literal type="string">" "</literal></expr></argument> )</argument_list></call></expr> ;</expr_stmt> </block_content>}</block></function>
</unit>
