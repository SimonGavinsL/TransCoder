<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/DIVIDE_LARGE_NUMBER_REPRESENTED_STRING.java"><function><type><specifier>static</specifier> <name>String</name></type> <name>longDivision</name> <parameter_list>( <parameter><decl><type><name>String</name></type> <name>number</name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>divisor</name></decl></parameter> )</parameter_list> <block>{<block_content> <decl_stmt><decl><type><name>String</name></type> <name>ans</name> <init>= <expr><literal type="string">" "</literal></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name><name>char</name> <index>[ ]</index></name></type> <name>num</name> <init>= <expr><call><name><name>number</name> <operator>.</operator> <name>toCharArray</name></name> <argument_list>( )</argument_list></call></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name>temp</name> <init>= <expr><name><name>num</name> <index>[ <expr><name>idx</name></expr> ]</index></name> <operator>-</operator> <literal type="char">'0'</literal></expr></init></decl> ;</decl_stmt> <while>while <condition>( <expr><name>temp</name> <operator>&lt;</operator> <name>divisor</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>temp</name> <operator>=</operator> <name>temp</name> <operator>*</operator> <literal type="number">10</literal> <operator>+</operator> <operator>(</operator> <name><name>num</name> <index>[ <expr><operator>++</operator> <name>idx</name></expr> ]</index></name> <operator>-</operator> <literal type="char">'0'</literal> <operator>)</operator></expr> ;</expr_stmt></block_content></block></while> <expr_stmt><expr><name>idx</name> <operator>+=</operator> <literal type="number">1</literal></expr> ;</expr_stmt> <while>while <condition>( <expr><name><name>num</name> <operator>.</operator> <name>length</name></name> <operator>&gt;</operator> <name>idx</name></expr> )</condition> <block>{<block_content> <expr_stmt><expr><name>ans</name> <operator>+=</operator> <operator>(</operator> <name>temp</name> <operator>/</operator> <name>divisor</name> <operator>)</operator></expr> ;</expr_stmt> <expr_stmt><expr><name>temp</name> <operator>=</operator> <operator>(</operator> <name>temp</name> <operator>%</operator> <name>divisor</name> <operator>)</operator> <operator>*</operator> <literal type="number">10</literal> <operator>+</operator> <name><name>num</name> <index>[ <expr><name>idx</name> <operator>++</operator></expr> ]</index></name> <operator>-</operator> <literal type="char">'0'</literal></expr> ;</expr_stmt> </block_content>}</block></while> <if_stmt><if>if <condition>( <expr><call><name><name>ans</name> <operator>.</operator> <name>length</name></name> <argument_list>( )</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><literal type="string">"0"</literal></expr> ;</return></block_content></block></if></if_stmt> <return>return <expr><name>ans</name></expr> ;</return> </block_content>}</block></function>
</unit>
