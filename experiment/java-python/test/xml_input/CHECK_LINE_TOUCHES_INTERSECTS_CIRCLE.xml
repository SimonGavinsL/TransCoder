<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/CHECK_LINE_TOUCHES_INTERSECTS_CIRCLE.java"><function><type><specifier>static</specifier> <name>void</name></type> <name>checkCollision</name> <parameter_list>( <parameter><decl><type><name>int</name></type> <name>a</name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>b</name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>c</name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>radius</name></decl></parameter> )</parameter_list> <block>{<block_content> <decl_stmt><decl><type><name>double</name></type> <name>dist</name> <init>= <expr><operator>(</operator> <call><name><name>Math</name> <operator>.</operator> <name>abs</name></name> <argument_list>( <argument><expr><name>a</name> <operator>*</operator> <name>x</name> <operator>+</operator> <name>b</name> <operator>*</operator> <name>y</name> <operator>+</operator> <name>c</name></expr></argument> )</argument_list></call> <operator>)</operator> <operator>/</operator> <call><name><name>Math</name> <operator>.</operator> <name>sqrt</name></name> <argument_list>( <argument><expr><name>a</name> <operator>*</operator> <name>a</name> <operator>+</operator> <name>b</name> <operator>*</operator> <name>b</name></expr></argument> )</argument_list></call></expr></init></decl> ;</decl_stmt> <if_stmt><if>if <condition>( <expr><name>radius</name> <operator>==</operator> <name>dist</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>System</name> <operator>.</operator> <name>out</name> <operator>.</operator> <name>println</name></name> <argument_list>( <argument><expr><literal type="string">" Touch "</literal></expr></argument> )</argument_list></call></expr> ;</expr_stmt></block_content></block></if> <if type="elseif">else if <condition>( <expr><name>radius</name> <operator>&gt;</operator> <name>dist</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>System</name> <operator>.</operator> <name>out</name> <operator>.</operator> <name>println</name></name> <argument_list>( <argument><expr><literal type="string">" Intersect "</literal></expr></argument> )</argument_list></call></expr> ;</expr_stmt></block_content></block></if> <else>else<block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>System</name> <operator>.</operator> <name>out</name> <operator>.</operator> <name>println</name></name> <argument_list>( <argument><expr><literal type="string">" Outside "</literal></expr></argument> )</argument_list></call></expr> ;</expr_stmt></block_content></block></else></if_stmt> </block_content>}</block></function>
</unit>
