<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/FIND_SUM_NODES_GIVEN_PERFECT_BINARY_TREE_1.java"><function><type><specifier>static</specifier> <name>double</name></type> <name>sumNodes</name> <parameter_list>( <parameter><decl><type><name>int</name></type> <name>l</name></decl></parameter> )</parameter_list> <block>{<block_content> <decl_stmt><decl><type><name>double</name></type> <name>leafNodeCount</name> <init>= <expr><call><name><name>Math</name> <operator>.</operator> <name>pow</name></name> <argument_list>( <argument><expr><literal type="number">2</literal></expr></argument> , <argument><expr><name>l</name> <operator>-</operator> <literal type="number">1</literal></expr></argument> )</argument_list></call></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>double</name></type> <name>sumLastLevel</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</decl_stmt> <expr_stmt><expr><name>sumLastLevel</name> <operator>=</operator> <operator>(</operator> <name>leafNodeCount</name> <operator>*</operator> <operator>(</operator> <name>leafNodeCount</name> <operator>+</operator> <literal type="number">1</literal> <operator>)</operator> <operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr> ;</expr_stmt> <decl_stmt><decl><type><name>double</name></type> <name>sum</name> <init>= <expr><name>sumLastLevel</name> <operator>*</operator> <name>l</name></expr></init></decl> ;</decl_stmt> <return>return <expr><name>sum</name></expr> ;</return> </block_content>}</block></function>
</unit>
