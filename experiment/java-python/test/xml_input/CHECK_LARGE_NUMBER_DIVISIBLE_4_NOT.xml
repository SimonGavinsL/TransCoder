<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/CHECK_LARGE_NUMBER_DIVISIBLE_4_NOT.java"><function><type><specifier>static</specifier> <name>boolean</name></type> <name>check</name> <parameter_list>( <parameter><decl><type><name>String</name></type> <name>str</name></decl></parameter> )</parameter_list> <block>{<block_content> <decl_stmt><decl><type><name>int</name></type> <name>n</name> <init>= <expr><call><name><name>str</name> <operator>.</operator> <name>length</name></name> <argument_list>( )</argument_list></call></expr></init></decl> ;</decl_stmt> <if_stmt><if>if <condition>( <expr><name>n</name> <operator>==</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><literal type="boolean">false</literal></expr> ;</return></block_content></block></if></if_stmt> <if_stmt><if>if <condition>( <expr><name>n</name> <operator>==</operator> <literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><operator>(</operator> <operator>(</operator> <call><name><name>str</name> <operator>.</operator> <name>charAt</name></name> <argument_list>( <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call> <operator>-</operator> <literal type="char">'0'</literal> <operator>)</operator> <operator>%</operator> <literal type="number">4</literal> <operator>==</operator> <literal type="number">0</literal> <operator>)</operator></expr> ;</return></block_content></block></if></if_stmt> <decl_stmt><decl><type><name>int</name></type> <name>last</name> <init>= <expr><call><name><name>str</name> <operator>.</operator> <name>charAt</name></name> <argument_list>( <argument><expr><name>n</name> <operator>-</operator> <literal type="number">1</literal></expr></argument> )</argument_list></call> <operator>-</operator> <literal type="char">'0'</literal></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name>second_last</name> <init>= <expr><call><name><name>str</name> <operator>.</operator> <name>charAt</name></name> <argument_list>( <argument><expr><name>n</name> <operator>-</operator> <literal type="number">2</literal></expr></argument> )</argument_list></call> <operator>-</operator> <literal type="char">'0'</literal></expr></init></decl> ;</decl_stmt> <return>return <expr><operator>(</operator> <operator>(</operator> <name>second_last</name> <operator>*</operator> <literal type="number">10</literal> <operator>+</operator> <name>last</name> <operator>)</operator> <operator>%</operator> <literal type="number">4</literal> <operator>==</operator> <literal type="number">0</literal> <operator>)</operator></expr> ;</return> </block_content>}</block></function>
</unit>
