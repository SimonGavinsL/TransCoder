<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/INTERPOLATION_SEARCH.java"><function><type><specifier>static</specifier> <name>int</name></type> <name>interpolationSearch</name> <parameter_list>( <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter> )</parameter_list> <block>{<block_content> <decl_stmt><decl><type><name>int</name></type> <name>lo</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> , <decl><type ref="prev"/><name>hi</name> <init>= <expr><operator>(</operator> <name><name>arr</name> <operator>.</operator> <name>length</name></name> <operator>-</operator> <literal type="number">1</literal> <operator>)</operator></expr></init></decl> ;</decl_stmt> <while>while <condition>( <expr><name>lo</name> <operator>&lt;=</operator> <name>hi</name> <operator>&amp;&amp;</operator> <name>x</name> <operator>&gt;=</operator> <name><name>arr</name> <index>[ <expr><name>lo</name></expr> ]</index></name> <operator>&amp;&amp;</operator> <name>x</name> <operator>&lt;=</operator> <name><name>arr</name> <index>[ <expr><name>hi</name></expr> ]</index></name></expr> )</condition> <block>{<block_content> <if_stmt><if>if <condition>( <expr><name>lo</name> <operator>==</operator> <name>hi</name></expr> )</condition> <block>{<block_content> <if_stmt><if>if <condition>( <expr><name><name>arr</name> <index>[ <expr><name>lo</name></expr> ]</index></name> <operator>==</operator> <name>x</name></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>lo</name></expr> ;</return></block_content></block></if></if_stmt> <return>return <expr><operator>-</operator> <literal type="number">1</literal></expr> ;</return> </block_content>}</block></if></if_stmt> <decl_stmt><decl><type><name>int</name></type> <name>pos</name> <init>= <expr><name>lo</name> <operator>+</operator> <operator>(</operator> <operator>(</operator> <operator>(</operator> <name>hi</name> <operator>-</operator> <name>lo</name> <operator>)</operator> <operator>/</operator> <operator>(</operator> <name><name>arr</name> <index>[ <expr><name>hi</name></expr> ]</index></name> <operator>-</operator> <name><name>arr</name> <index>[ <expr><name>lo</name></expr> ]</index></name> <operator>)</operator> <operator>)</operator> <operator>*</operator> <operator>(</operator> <name>x</name> <operator>-</operator> <name><name>arr</name> <index>[ <expr><name>lo</name></expr> ]</index></name> <operator>)</operator> <operator>)</operator></expr></init></decl> ;</decl_stmt> <if_stmt><if>if <condition>( <expr><name><name>arr</name> <index>[ <expr><name>pos</name></expr> ]</index></name> <operator>==</operator> <name>x</name></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>pos</name></expr> ;</return></block_content></block></if></if_stmt> <if_stmt><if>if <condition>( <expr><name><name>arr</name> <index>[ <expr><name>pos</name></expr> ]</index></name> <operator>&lt;</operator> <name>x</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>lo</name> <operator>=</operator> <name>pos</name> <operator>+</operator> <literal type="number">1</literal></expr> ;</expr_stmt></block_content></block></if> <else>else<block type="pseudo"><block_content> <expr_stmt><expr><name>hi</name> <operator>=</operator> <name>pos</name> <operator>-</operator> <literal type="number">1</literal></expr> ;</expr_stmt></block_content></block></else></if_stmt> </block_content>}</block></while> <return>return <expr><operator>-</operator> <literal type="number">1</literal></expr> ;</return> </block_content>}</block></function>
</unit>
