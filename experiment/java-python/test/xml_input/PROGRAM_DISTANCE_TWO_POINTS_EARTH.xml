<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/PROGRAM_DISTANCE_TWO_POINTS_EARTH.java"><function><type><specifier>public</specifier> <specifier>static</specifier> <name>double</name></type> <name>distance</name> <parameter_list>( <parameter><decl><type><name>double</name></type> <name>lat1</name></decl></parameter> , <parameter><decl><type><name>double</name></type> <name>lat2</name></decl></parameter> , <parameter><decl><type><name>double</name></type> <name>lon1</name></decl></parameter> , <parameter><decl><type><name>double</name></type> <name>lon2</name></decl></parameter> )</parameter_list> <block>{<block_content> <expr_stmt><expr><name>lon1</name> <operator>=</operator> <call><name><name>Math</name> <operator>.</operator> <name>toRadians</name></name> <argument_list>( <argument><expr><name>lon1</name></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <expr_stmt><expr><name>lon2</name> <operator>=</operator> <call><name><name>Math</name> <operator>.</operator> <name>toRadians</name></name> <argument_list>( <argument><expr><name>lon2</name></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <expr_stmt><expr><name>lat1</name> <operator>=</operator> <call><name><name>Math</name> <operator>.</operator> <name>toRadians</name></name> <argument_list>( <argument><expr><name>lat1</name></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <expr_stmt><expr><name>lat2</name> <operator>=</operator> <call><name><name>Math</name> <operator>.</operator> <name>toRadians</name></name> <argument_list>( <argument><expr><name>lat2</name></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <decl_stmt><decl><type><name>double</name></type> <name>dlon</name> <init>= <expr><name>lon2</name> <operator>-</operator> <name>lon1</name></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>double</name></type> <name>dlat</name> <init>= <expr><name>lat2</name> <operator>-</operator> <name>lat1</name></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>double</name></type> <name>a</name> <init>= <expr><call><name><name>Math</name> <operator>.</operator> <name>pow</name></name> <argument_list>( <argument><expr><call><name><name>Math</name> <operator>.</operator> <name>sin</name></name> <argument_list>( <argument><expr><name>dlat</name> <operator>/</operator> <literal type="number">2</literal></expr></argument> )</argument_list></call></expr></argument> , <argument><expr><literal type="number">2</literal></expr></argument> )</argument_list></call> <operator>+</operator> <call><name><name>Math</name> <operator>.</operator> <name>cos</name></name> <argument_list>( <argument><expr><name>lat1</name></expr></argument> )</argument_list></call> <operator>*</operator> <call><name><name>Math</name> <operator>.</operator> <name>cos</name></name> <argument_list>( <argument><expr><name>lat2</name></expr></argument> )</argument_list></call> <operator>*</operator> <call><name><name>Math</name> <operator>.</operator> <name>pow</name></name> <argument_list>( <argument><expr><call><name><name>Math</name> <operator>.</operator> <name>sin</name></name> <argument_list>( <argument><expr><name>dlon</name> <operator>/</operator> <literal type="number">2</literal></expr></argument> )</argument_list></call></expr></argument> , <argument><expr><literal type="number">2</literal></expr></argument> )</argument_list></call></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>double</name></type> <name>c</name> <init>= <expr><literal type="number">2</literal> <operator>*</operator> <call><name><name>Math</name> <operator>.</operator> <name>asin</name></name> <argument_list>( <argument><expr><call><name><name>Math</name> <operator>.</operator> <name>sqrt</name></name> <argument_list>( <argument><expr><name>a</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>double</name></type> <name>r</name> <init>= <expr><literal type="number">6371</literal></expr></init></decl> ;</decl_stmt> <return>return <expr><operator>(</operator> <name>c</name> <operator>*</operator> <name>r</name> <operator>)</operator></expr> ;</return> </block_content>}</block></function>
</unit>
