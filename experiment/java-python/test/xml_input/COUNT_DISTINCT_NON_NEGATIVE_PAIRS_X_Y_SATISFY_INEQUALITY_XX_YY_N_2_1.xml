<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/COUNT_DISTINCT_NON_NEGATIVE_PAIRS_X_Y_SATISFY_INEQUALITY_XX_YY_N_2_1.java"><function><type><specifier>static</specifier> <name>int</name></type> <name>countSolutions</name> <parameter_list>( <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter> )</parameter_list> <block>{<block_content> <decl_stmt><decl><type><name>int</name></type> <name>x</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> , <decl><type ref="prev"/><name>yCount</name></decl> , <decl><type ref="prev"/><name>res</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</decl_stmt> <for>for <control>( <init><expr><name>yCount</name> <operator>=</operator> <literal type="number">0</literal></expr> ;</init> <condition><expr><name>yCount</name> <operator>*</operator> <name>yCount</name> <operator>&lt;</operator> <name>n</name></expr> ;</condition> <incr><expr><name>yCount</name> <operator>++</operator></expr></incr> )</control><block type="pseudo"><block_content> <empty_stmt>;</empty_stmt></block_content></block></for> <while>while <condition>( <expr><name>yCount</name> <operator>!=</operator> <literal type="number">0</literal></expr> )</condition> <block>{<block_content> <expr_stmt><expr><name>res</name> <operator>+=</operator> <name>yCount</name></expr> ;</expr_stmt> <expr_stmt><expr><name>x</name> <operator>++</operator></expr> ;</expr_stmt> <while>while <condition>( <expr><name>yCount</name> <operator>!=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <operator>(</operator> <name>x</name> <operator>*</operator> <name>x</name> <operator>+</operator> <operator>(</operator> <name>yCount</name> <operator>-</operator> <literal type="number">1</literal> <operator>)</operator> <operator>*</operator> <operator>(</operator> <name>yCount</name> <operator>-</operator> <literal type="number">1</literal> <operator>)</operator> <operator>&gt;=</operator> <name>n</name> <operator>)</operator></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>yCount</name> <operator>--</operator></expr> ;</expr_stmt></block_content></block></while> </block_content>}</block></while> <return>return <expr><name>res</name></expr> ;</return> </block_content>}</block></function>
</unit>
