<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/FIND_A_TRIPLET_THAT_SUM_TO_A_GIVEN_VALUE_1.java"><function><type><name>boolean</name></type> <name>find3Numbers</name> <parameter_list>( <parameter><decl><type><name>int</name></type> <name><name>A</name> <index>[ ]</index></name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>arr_size</name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>sum</name></decl></parameter> )</parameter_list> <block>{<block_content> <decl_stmt><decl><type><name>int</name></type> <name>l</name></decl> , <decl><type ref="prev"/><name>r</name></decl> ;</decl_stmt> <expr_stmt><expr><call><name>quickSort</name> <argument_list>( <argument><expr><name>A</name></expr></argument> , <argument><expr><literal type="number">0</literal></expr></argument> , <argument><expr><name>arr_size</name> <operator>-</operator> <literal type="number">1</literal></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <for>for <control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>arr_size</name> <operator>-</operator> <literal type="number">2</literal></expr> ;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr> )</control> <block>{<block_content> <expr_stmt><expr><name>l</name> <operator>=</operator> <name>i</name> <operator>+</operator> <literal type="number">1</literal></expr> ;</expr_stmt> <expr_stmt><expr><name>r</name> <operator>=</operator> <name>arr_size</name> <operator>-</operator> <literal type="number">1</literal></expr> ;</expr_stmt> <while>while <condition>( <expr><name>l</name> <operator>&lt;</operator> <name>r</name></expr> )</condition> <block>{<block_content> <if_stmt><if>if <condition>( <expr><name><name>A</name> <index>[ <expr><name>i</name></expr> ]</index></name> <operator>+</operator> <name><name>A</name> <index>[ <expr><name>l</name></expr> ]</index></name> <operator>+</operator> <name><name>A</name> <index>[ <expr><name>r</name></expr> ]</index></name> <operator>==</operator> <name>sum</name></expr> )</condition> <block>{<block_content> <expr_stmt><expr><call><name><name>System</name> <operator>.</operator> <name>out</name> <operator>.</operator> <name>print</name></name> <argument_list>( <argument><expr><literal type="string">" Triplet â is â "</literal> <operator>+</operator> <name><name>A</name> <index>[ <expr><name>i</name></expr> ]</index></name> <operator>+</operator> <literal type="string">" , â "</literal> <operator>+</operator> <name><name>A</name> <index>[ <expr><name>l</name></expr> ]</index></name> <operator>+</operator> <literal type="string">" , â "</literal> <operator>+</operator> <name><name>A</name> <index>[ <expr><name>r</name></expr> ]</index></name></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <return>return <expr><literal type="boolean">true</literal></expr> ;</return> </block_content>}</block></if> <if type="elseif">else if <condition>( <expr><name><name>A</name> <index>[ <expr><name>i</name></expr> ]</index></name> <operator>+</operator> <name><name>A</name> <index>[ <expr><name>l</name></expr> ]</index></name> <operator>+</operator> <name><name>A</name> <index>[ <expr><name>r</name></expr> ]</index></name> <operator>&lt;</operator> <name>sum</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>l</name> <operator>++</operator></expr> ;</expr_stmt></block_content></block></if> <else>else<block type="pseudo"><block_content> <expr_stmt><expr><name>r</name> <operator>--</operator></expr> ;</expr_stmt></block_content></block></else></if_stmt> </block_content>}</block></while> </block_content>}</block></for> <return>return <expr><literal type="boolean">false</literal></expr> ;</return> </block_content>}</block></function>
</unit>
