<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/NUMBER_OF_PAIRS_IN_AN_ARRAY_HAVING_SUM_EQUAL_TO_PRODUCT.java"><function><type><specifier>static</specifier> <name>int</name></type> <name>sumEqualProduct</name> <parameter_list>( <parameter><decl><type><name>int</name></type> <name><name>a</name> <index>[ ]</index></name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter> )</parameter_list> <block>{<block_content> <decl_stmt><decl><type><name>int</name></type> <name>zero</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> , <decl><type ref="prev"/><name>two</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</decl_stmt> <for>for <control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr> )</control> <block>{<block_content> <if_stmt><if>if <condition>( <expr><name><name>a</name> <index>[ <expr><name>i</name></expr> ]</index></name> <operator>==</operator> <literal type="number">0</literal></expr> )</condition> <block>{<block_content> <expr_stmt><expr><name>zero</name> <operator>++</operator></expr> ;</expr_stmt> </block_content>}</block></if></if_stmt> <if_stmt><if>if <condition>( <expr><name><name>a</name> <index>[ <expr><name>i</name></expr> ]</index></name> <operator>==</operator> <literal type="number">2</literal></expr> )</condition> <block>{<block_content> <expr_stmt><expr><name>two</name> <operator>++</operator></expr> ;</expr_stmt> </block_content>}</block></if></if_stmt> </block_content>}</block></for> <decl_stmt><decl><type><name>int</name></type> <name>cnt</name> <init>= <expr><operator>(</operator> <name>zero</name> <operator>*</operator> <operator>(</operator> <name>zero</name> <operator>-</operator> <literal type="number">1</literal> <operator>)</operator> <operator>)</operator> <operator>/</operator> <literal type="number">2</literal> <operator>+</operator> <operator>(</operator> <name>two</name> <operator>*</operator> <operator>(</operator> <name>two</name> <operator>-</operator> <literal type="number">1</literal> <operator>)</operator> <operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr></init></decl> ;</decl_stmt> <return>return <expr><name>cnt</name></expr> ;</return> </block_content>}</block></function>
</unit>
