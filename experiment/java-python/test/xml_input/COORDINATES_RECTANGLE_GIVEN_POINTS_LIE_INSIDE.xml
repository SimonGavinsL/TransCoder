<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/COORDINATES_RECTANGLE_GIVEN_POINTS_LIE_INSIDE.java"><function><type><specifier>static</specifier> <name>void</name></type> <name>printRect</name> <parameter_list>( <parameter><decl><type><name>Integer</name></type> <name><name>X</name> <index>[ ]</index></name></decl></parameter> , <parameter><decl><type><name>Integer</name></type> <name><name>Y</name> <index>[ ]</index></name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter> )</parameter_list> <block>{<block_content> <decl_stmt><decl><type><name>int</name></type> <name>Xmax</name> <init>= <expr><call><name><name>Collections</name> <operator>.</operator> <name>max</name></name> <argument_list>( <argument><expr><call><name><name>Arrays</name> <operator>.</operator> <name>asList</name></name> <argument_list>( <argument><expr><name>X</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name>Xmin</name> <init>= <expr><call><name><name>Collections</name> <operator>.</operator> <name>min</name></name> <argument_list>( <argument><expr><call><name><name>Arrays</name> <operator>.</operator> <name>asList</name></name> <argument_list>( <argument><expr><name>X</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name>Ymax</name> <init>= <expr><call><name><name>Collections</name> <operator>.</operator> <name>max</name></name> <argument_list>( <argument><expr><call><name><name>Arrays</name> <operator>.</operator> <name>asList</name></name> <argument_list>( <argument><expr><name>Y</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name>Ymin</name> <init>= <expr><call><name><name>Collections</name> <operator>.</operator> <name>min</name></name> <argument_list>( <argument><expr><call><name><name>Arrays</name> <operator>.</operator> <name>asList</name></name> <argument_list>( <argument><expr><name>Y</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr></init></decl> ;</decl_stmt> <expr_stmt><expr><call><name><name>System</name> <operator>.</operator> <name>out</name> <operator>.</operator> <name>println</name></name> <argument_list>( <argument><expr><literal type="string">" { "</literal> <operator>+</operator> <name>Xmin</name> <operator>+</operator> <literal type="string">" , â "</literal> <operator>+</operator> <name>Ymin</name> <operator>+</operator> <literal type="string">" } "</literal></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <expr_stmt><expr><call><name><name>System</name> <operator>.</operator> <name>out</name> <operator>.</operator> <name>println</name></name> <argument_list>( <argument><expr><literal type="string">" { "</literal> <operator>+</operator> <name>Xmin</name> <operator>+</operator> <literal type="string">" , â "</literal> <operator>+</operator> <name>Ymax</name> <operator>+</operator> <literal type="string">" } "</literal></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <expr_stmt><expr><call><name><name>System</name> <operator>.</operator> <name>out</name> <operator>.</operator> <name>println</name></name> <argument_list>( <argument><expr><literal type="string">" { "</literal> <operator>+</operator> <name>Xmax</name> <operator>+</operator> <literal type="string">" , â "</literal> <operator>+</operator> <name>Ymax</name> <operator>+</operator> <literal type="string">" } "</literal></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <expr_stmt><expr><call><name><name>System</name> <operator>.</operator> <name>out</name> <operator>.</operator> <name>println</name></name> <argument_list>( <argument><expr><literal type="string">" { "</literal> <operator>+</operator> <name>Xmax</name> <operator>+</operator> <literal type="string">" , â "</literal> <operator>+</operator> <name>Ymin</name> <operator>+</operator> <literal type="string">" } "</literal></expr></argument> )</argument_list></call></expr> ;</expr_stmt> </block_content>}</block></function>
</unit>
