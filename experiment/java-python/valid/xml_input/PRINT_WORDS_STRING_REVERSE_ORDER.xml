<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/PRINT_WORDS_STRING_REVERSE_ORDER.java"><function><type><specifier>static</specifier> <name>String</name></type> <name>wordReverse</name> <parameter_list>( <parameter><decl><type><name>String</name></type> <name>str</name></decl></parameter> )</parameter_list> <block>{<block_content> <decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><call><name><name>str</name> <operator>.</operator> <name>length</name></name> <argument_list>( )</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name>start</name></decl> , <decl><type ref="prev"/><name>end</name> <init>= <expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>String</name></type> <name>result</name> <init>= <expr><literal type="string">" "</literal></expr></init></decl> ;</decl_stmt> <while>while <condition>( <expr><name>i</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr> )</condition> <block>{<block_content> <if_stmt><if>if <condition>( <expr><call><name><name>str</name> <operator>.</operator> <name>charAt</name></name> <argument_list>( <argument><expr><name>i</name></expr></argument> )</argument_list></call> <operator>==</operator> <literal type="char">' â '</literal></expr> )</condition> <block>{<block_content> <expr_stmt><expr><name>start</name> <operator>=</operator> <name>i</name> <operator>+</operator> <literal type="number">1</literal></expr> ;</expr_stmt> <while>while <condition>( <expr><name>start</name> <operator>!=</operator> <name>end</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>result</name> <operator>+=</operator> <call><name><name>str</name> <operator>.</operator> <name>charAt</name></name> <argument_list>( <argument><expr><name>start</name> <operator>++</operator></expr></argument> )</argument_list></call></expr> ;</expr_stmt></block_content></block></while> <expr_stmt><expr><name>result</name> <operator>+=</operator> <literal type="char">' â '</literal></expr> ;</expr_stmt> <expr_stmt><expr><name>end</name> <operator>=</operator> <name>i</name></expr> ;</expr_stmt> </block_content>}</block></if></if_stmt> <expr_stmt><expr><name>i</name> <operator>--</operator></expr> ;</expr_stmt> </block_content>}</block></while> <expr_stmt><expr><name>start</name> <operator>=</operator> <literal type="number">0</literal></expr> ;</expr_stmt> <while>while <condition>( <expr><name>start</name> <operator>!=</operator> <name>end</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>result</name> <operator>+=</operator> <call><name><name>str</name> <operator>.</operator> <name>charAt</name></name> <argument_list>( <argument><expr><name>start</name> <operator>++</operator></expr></argument> )</argument_list></call></expr> ;</expr_stmt></block_content></block></while> <return>return <expr><name>result</name></expr> ;</return> </block_content>}</block></function>
</unit>
