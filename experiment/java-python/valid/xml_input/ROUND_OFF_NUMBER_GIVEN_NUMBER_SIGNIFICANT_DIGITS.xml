<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/ROUND_OFF_NUMBER_GIVEN_NUMBER_SIGNIFICANT_DIGITS.java"><function><type><specifier>static</specifier> <name>void</name></type> <name>Round_off</name> <parameter_list>( <parameter><decl><type><name>double</name></type> <name>N</name></decl></parameter> , <parameter><decl><type><name>double</name></type> <name>n</name></decl></parameter> )</parameter_list> <block>{<block_content> <decl_stmt><decl><type><name>int</name></type> <name>h</name></decl> ;</decl_stmt> <decl_stmt><decl><type><name>double</name></type> <name>l</name></decl> , <decl><type ref="prev"/><name>a</name></decl> , <decl><type ref="prev"/><name>b</name></decl> , <decl><type ref="prev"/><name>c</name></decl> , <decl><type ref="prev"/><name>d</name></decl> , <decl><type ref="prev"/><name>e</name></decl> , <decl><type ref="prev"/><name>i</name></decl> , <decl><type ref="prev"/><name>j</name></decl> , <decl><type ref="prev"/><name>m</name></decl> , <decl><type ref="prev"/><name>f</name></decl> , <decl><type ref="prev"/><name>g</name></decl> ;</decl_stmt> <expr_stmt><expr><name>b</name> <operator>=</operator> <name>N</name></expr> ;</expr_stmt> <expr_stmt><expr><name>c</name> <operator>=</operator> <call><name>floor</name> <argument_list>( <argument><expr><name>N</name></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <for>for <control>( <init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr> ;</init> <condition><expr><name>b</name> <operator>&gt;=</operator> <literal type="number">1</literal></expr> ;</condition> <incr><expr><operator>++</operator> <name>i</name></expr></incr> )</control><block type="pseudo"><block_content> <expr_stmt><expr><name>b</name> <operator>=</operator> <name>b</name> <operator>/</operator> <literal type="number">10</literal></expr> ;</expr_stmt></block_content></block></for> <expr_stmt><expr><name>d</name> <operator>=</operator> <name>n</name> <operator>-</operator> <name>i</name></expr> ;</expr_stmt> <expr_stmt><expr><name>b</name> <operator>=</operator> <name>N</name></expr> ;</expr_stmt> <expr_stmt><expr><name>b</name> <operator>=</operator> <name>b</name> <operator>*</operator> <call><name>pow</name> <argument_list>( <argument><expr><literal type="number">10</literal></expr></argument> , <argument><expr><name>d</name></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <expr_stmt><expr><name>e</name> <operator>=</operator> <name>b</name> <operator>+</operator> <literal type="number">0.5</literal></expr> ;</expr_stmt> <if_stmt><if>if <condition>( <expr><operator>(</operator> <name>float</name> <operator>)</operator> <name>e</name> <operator>==</operator> <operator>(</operator> <name>float</name> <operator>)</operator> <call><name>ceil</name> <argument_list>( <argument><expr><name>b</name></expr></argument> )</argument_list></call></expr> )</condition> <block>{<block_content> <expr_stmt><expr><name>f</name> <operator>=</operator> <operator>(</operator> <call><name>ceil</name> <argument_list>( <argument><expr><name>b</name></expr></argument> )</argument_list></call> <operator>)</operator></expr> ;</expr_stmt> <expr_stmt><expr><name>h</name> <operator>=</operator> <operator>(</operator> <name>int</name> <operator>)</operator> <operator>(</operator> <name>f</name> <operator>-</operator> <literal type="number">2</literal> <operator>)</operator></expr> ;</expr_stmt> <if_stmt><if>if <condition>( <expr><name>h</name> <operator>%</operator> <literal type="number">2</literal> <operator>!=</operator> <literal type="number">0</literal></expr> )</condition> <block>{<block_content> <expr_stmt><expr><name>e</name> <operator>=</operator> <name>e</name> <operator>-</operator> <literal type="number">1</literal></expr> ;</expr_stmt> </block_content>}</block></if></if_stmt> </block_content>}</block></if></if_stmt> <expr_stmt><expr><name>j</name> <operator>=</operator> <call><name>floor</name> <argument_list>( <argument><expr><name>e</name></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <expr_stmt><expr><name>m</name> <operator>=</operator> <call><name>pow</name> <argument_list>( <argument><expr><literal type="number">10</literal></expr></argument> , <argument><expr><name>d</name></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <expr_stmt><expr><name>j</name> <operator>=</operator> <name>j</name> <operator>/</operator> <name>m</name></expr> ;</expr_stmt> <expr_stmt><expr><call><name><name>System</name> <operator>.</operator> <name>out</name> <operator>.</operator> <name>println</name></name> <argument_list>( <argument><expr><literal type="string">" The â number â after â rounding - off â is â "</literal> <operator>+</operator> <name>j</name></expr></argument> )</argument_list></call></expr> ;</expr_stmt> </block_content>}</block></function>
</unit>
