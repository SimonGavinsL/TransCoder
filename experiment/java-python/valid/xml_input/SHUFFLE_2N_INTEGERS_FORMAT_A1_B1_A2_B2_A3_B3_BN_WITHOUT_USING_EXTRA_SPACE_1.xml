<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/SHUFFLE_2N_INTEGERS_FORMAT_A1_B1_A2_B2_A3_B3_BN_WITHOUT_USING_EXTRA_SPACE_1.java"><function><type><specifier>static</specifier> <name>void</name></type> <name>shufleArray</name> <parameter_list>( <parameter><decl><type><name>int</name></type> <name><name>a</name> <index>[ ]</index></name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>f</name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>l</name></decl></parameter> )</parameter_list> <block>{<block_content> <if_stmt><if>if <condition>( <expr><name>l</name> <operator>&gt;</operator> <name>f</name></expr> )</condition><block type="pseudo"><block_content> <return>return ;</return></block_content></block></if></if_stmt> <if_stmt><if>if <condition>( <expr><name>l</name> <operator>-</operator> <name>f</name> <operator>==</operator> <literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content> <return>return ;</return></block_content></block></if></if_stmt> <decl_stmt><decl><type><name>int</name></type> <name>mid</name> <init>= <expr><operator>(</operator> <name>f</name> <operator>+</operator> <name>l</name> <operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name>temp</name> <init>= <expr><name>mid</name> <operator>+</operator> <literal type="number">1</literal></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name>mmid</name> <init>= <expr><operator>(</operator> <name>f</name> <operator>+</operator> <name>mid</name> <operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr></init></decl> ;</decl_stmt> <for>for <control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name>mmid</name> <operator>+</operator> <literal type="number">1</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>mid</name></expr> ;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr> )</control> <block>{<block_content> <decl_stmt><decl><type><name>int</name></type> <name>temp1</name> <init>= <expr><name><name>a</name> <index>[ <expr><name>i</name></expr> ]</index></name></expr></init></decl> ;</decl_stmt> <expr_stmt><expr><name><name>a</name> <index>[ <expr><name>i</name></expr> ]</index></name> <operator>=</operator> <name><name>a</name> <index>[ <expr><name>temp</name></expr> ]</index></name></expr> ;</expr_stmt> <expr_stmt><expr><name><name>a</name> <index>[ <expr><name>temp</name> <operator>++</operator></expr> ]</index></name> <operator>=</operator> <name>temp1</name></expr> ;</expr_stmt> </block_content>}</block></for> <expr_stmt><expr><call><name>shufleArray</name> <argument_list>( <argument><expr><name>a</name></expr></argument> , <argument><expr><name>f</name></expr></argument> , <argument><expr><name>mid</name></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <expr_stmt><expr><call><name>shufleArray</name> <argument_list>( <argument><expr><name>a</name></expr></argument> , <argument><expr><name>mid</name> <operator>+</operator> <literal type="number">1</literal></expr></argument> , <argument><expr><name>l</name></expr></argument> )</argument_list></call></expr> ;</expr_stmt> </block_content>}</block></function>
</unit>
