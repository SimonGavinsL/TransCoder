<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/PRINT_SHORTEST_PATH_PRINT_STRING_SCREEN.java"><function><type><specifier>static</specifier> <name>void</name></type> <name>printPath</name> <parameter_list>( <parameter><decl><type><name>String</name></type> <name>str</name></decl></parameter> )</parameter_list> <block>{<block_content> <decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name>curX</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> , <decl><type ref="prev"/><name>curY</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</decl_stmt> <while>while <condition>( <expr><name>i</name> <operator>&lt;</operator> <call><name><name>str</name> <operator>.</operator> <name>length</name></name> <argument_list>( )</argument_list></call></expr> )</condition> <block>{<block_content> <decl_stmt><decl><type><name>int</name></type> <name>nextX</name> <init>= <expr><operator>(</operator> <call><name><name>str</name> <operator>.</operator> <name>charAt</name></name> <argument_list>( <argument><expr><name>i</name></expr></argument> )</argument_list></call> <operator>-</operator> <literal type="char">' A '</literal> <operator>)</operator> <operator>/</operator> <literal type="number">5</literal></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name>nextY</name> <init>= <expr><operator>(</operator> <call><name><name>str</name> <operator>.</operator> <name>charAt</name></name> <argument_list>( <argument><expr><name>i</name></expr></argument> )</argument_list></call> <operator>-</operator> <literal type="char">' B '</literal> <operator>+</operator> <literal type="number">1</literal> <operator>)</operator> <operator>%</operator> <literal type="number">5</literal></expr></init></decl> ;</decl_stmt> <while>while <condition>( <expr><name>curX</name> <operator>&gt;</operator> <name>nextX</name></expr> )</condition> <block>{<block_content> <expr_stmt><expr><call><name><name>System</name> <operator>.</operator> <name>out</name> <operator>.</operator> <name>println</name></name> <argument_list>( <argument><expr><literal type="string">" Move â Up "</literal></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <expr_stmt><expr><name>curX</name> <operator>--</operator></expr> ;</expr_stmt> </block_content>}</block></while> <while>while <condition>( <expr><name>curY</name> <operator>&gt;</operator> <name>nextY</name></expr> )</condition> <block>{<block_content> <expr_stmt><expr><call><name><name>System</name> <operator>.</operator> <name>out</name> <operator>.</operator> <name>println</name></name> <argument_list>( <argument><expr><literal type="string">" Move â Left "</literal></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <expr_stmt><expr><name>curY</name> <operator>--</operator></expr> ;</expr_stmt> </block_content>}</block></while> <while>while <condition>( <expr><name>curX</name> <operator>&lt;</operator> <name>nextX</name></expr> )</condition> <block>{<block_content> <expr_stmt><expr><call><name><name>System</name> <operator>.</operator> <name>out</name> <operator>.</operator> <name>println</name></name> <argument_list>( <argument><expr><literal type="string">" Move â Down "</literal></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <expr_stmt><expr><name>curX</name> <operator>++</operator></expr> ;</expr_stmt> </block_content>}</block></while> <while>while <condition>( <expr><name>curY</name> <operator>&lt;</operator> <name>nextY</name></expr> )</condition> <block>{<block_content> <expr_stmt><expr><call><name><name>System</name> <operator>.</operator> <name>out</name> <operator>.</operator> <name>println</name></name> <argument_list>( <argument><expr><literal type="string">" Move â Right "</literal></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <expr_stmt><expr><name>curY</name> <operator>++</operator></expr> ;</expr_stmt> </block_content>}</block></while> <expr_stmt><expr><call><name><name>System</name> <operator>.</operator> <name>out</name> <operator>.</operator> <name>println</name></name> <argument_list>( <argument><expr><literal type="string">" Press â OK "</literal></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <expr_stmt><expr><name>i</name> <operator>++</operator></expr> ;</expr_stmt> </block_content>}</block></while> </block_content>}</block></function>
</unit>
