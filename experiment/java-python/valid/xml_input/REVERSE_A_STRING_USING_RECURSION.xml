<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/REVERSE_A_STRING_USING_RECURSION.java"><function><type><name>void</name></type> <name>reverse</name> <parameter_list>( <parameter><decl><type><name>String</name></type> <name>str</name></decl></parameter> )</parameter_list> <block>{<block_content> <if_stmt><if>if <condition>( <expr><operator>(</operator> <name>str</name> <operator>==</operator> <literal type="null">null</literal> <operator>)</operator> <operator>||</operator> <operator>(</operator> <call><name><name>str</name> <operator>.</operator> <name>length</name></name> <argument_list>( )</argument_list></call> <operator>&lt;=</operator> <literal type="number">1</literal> <operator>)</operator></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>System</name> <operator>.</operator> <name>out</name> <operator>.</operator> <name>println</name></name> <argument_list>( <argument><expr><name>str</name></expr></argument> )</argument_list></call></expr> ;</expr_stmt></block_content></block></if> <else>else <block>{<block_content> <expr_stmt><expr><call><name><name>System</name> <operator>.</operator> <name>out</name> <operator>.</operator> <name>print</name></name> <argument_list>( <argument><expr><call><name><name>str</name> <operator>.</operator> <name>charAt</name></name> <argument_list>( <argument><expr><call><name><name>str</name> <operator>.</operator> <name>length</name></name> <argument_list>( )</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <expr_stmt><expr><call><name>reverse</name> <argument_list>( <argument><expr><call><name><name>str</name> <operator>.</operator> <name>substring</name></name> <argument_list>( <argument><expr><literal type="number">0</literal></expr></argument> , <argument><expr><call><name><name>str</name> <operator>.</operator> <name>length</name></name> <argument_list>( )</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr> ;</expr_stmt> </block_content>}</block></else></if_stmt> </block_content>}</block></function>
</unit>
