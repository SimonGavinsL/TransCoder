<ns0:unit xmlns:ns0="http://www.srcML.org/srcML/src" filename="experiment/original/NTH_PALINDROME_K_DIGITS.java" language="Java" revision="1.0.0"><ns0:function><ns0:type><ns0:specifier>static</ns0:specifier> <ns0:name>void</ns0:name></ns0:type> <ns0:name>nthPalindrome</ns0:name> <ns0:parameter_list>( <ns0:parameter><ns0:decl><ns0:type><ns0:name>int</ns0:name></ns0:type> <ns0:name>n</ns0:name></ns0:decl></ns0:parameter> , <ns0:parameter><ns0:decl><ns0:type><ns0:name>int</ns0:name></ns0:type> <ns0:name>k</ns0:name></ns0:decl></ns0:parameter> )</ns0:parameter_list> <ns0:block>{<ns0:block_content> <ns0:decl_stmt><ns0:decl><ns0:type><ns0:name>int</ns0:name></ns0:type> <ns0:name>temp</ns0:name> <ns0:init>= <ns0:expr><ns0:ternary><ns0:condition><ns0:expr><ns0:operator>(</ns0:operator> <ns0:name>k</ns0:name> <ns0:operator>&amp;</ns0:operator> <ns0:literal type="number">1</ns0:literal> <ns0:operator>)</ns0:operator> <ns0:operator>!=</ns0:operator> <ns0:literal type="number">0</ns0:literal></ns0:expr> ?</ns0:condition><ns0:then> <ns0:expr><ns0:operator>(</ns0:operator> <ns0:name>k</ns0:name> <ns0:operator>/</ns0:operator> <ns0:literal type="number">2</ns0:literal> <ns0:operator>)</ns0:operator></ns0:expr> </ns0:then><ns0:else>: <ns0:expr><ns0:operator>(</ns0:operator> <ns0:name>k</ns0:name> <ns0:operator>/</ns0:operator> <ns0:literal type="number">2</ns0:literal> <ns0:operator>-</ns0:operator> <ns0:literal type="number">1</ns0:literal> <ns0:operator>)</ns0:operator></ns0:expr></ns0:else></ns0:ternary></ns0:expr></ns0:init></ns0:decl> ;</ns0:decl_stmt> <ns0:decl_stmt><ns0:decl><ns0:type><ns0:name>int</ns0:name></ns0:type> <ns0:name>palindrome</ns0:name> <ns0:init>= <ns0:expr><ns0:operator>(</ns0:operator> <ns0:name>int</ns0:name> <ns0:operator>)</ns0:operator> <ns0:call><ns0:name><ns0:name>Math</ns0:name> <ns0:operator>.</ns0:operator> <ns0:name>pow</ns0:name></ns0:name> <ns0:argument_list>( <ns0:argument><ns0:expr><ns0:literal type="number">10</ns0:literal></ns0:expr></ns0:argument> , <ns0:argument><ns0:expr><ns0:name>temp</ns0:name></ns0:expr></ns0:argument> )</ns0:argument_list></ns0:call></ns0:expr></ns0:init></ns0:decl> ;</ns0:decl_stmt> <ns0:expr_stmt><ns0:expr><ns0:name>palindrome</ns0:name> <ns0:operator>+=</ns0:operator> <ns0:name>n</ns0:name> <ns0:operator>-</ns0:operator> <ns0:literal type="number">1</ns0:literal></ns0:expr> ;</ns0:expr_stmt> <ns0:expr_stmt><ns0:expr><ns0:call><ns0:name><ns0:name>System</ns0:name> <ns0:operator>.</ns0:operator> <ns0:name>out</ns0:name> <ns0:operator>.</ns0:operator> <ns0:name>print</ns0:name></ns0:name> <ns0:argument_list>( <ns0:argument><ns0:expr><ns0:name>palindrome</ns0:name></ns0:expr></ns0:argument> )</ns0:argument_list></ns0:call></ns0:expr> ;</ns0:expr_stmt> <ns0:while>while <ns0:condition>( <ns0:expr><ns0:name>palindrome</ns0:name> <ns0:operator>&gt;</ns0:operator> <ns0:literal type="number">0</ns0:literal></ns0:expr> )</ns0:condition> <ns0:block>{<ns0:block_content> <ns0:expr_stmt><ns0:expr><ns0:call><ns0:name><ns0:name>System</ns0:name> <ns0:operator>.</ns0:operator> <ns0:name>out</ns0:name> <ns0:operator>.</ns0:operator> <ns0:name>print</ns0:name></ns0:name> <ns0:argument_list>( <ns0:argument><ns0:expr><ns0:name>palindrome</ns0:name> <ns0:operator>%</ns0:operator> <ns0:literal type="number">10</ns0:literal></ns0:expr></ns0:argument> )</ns0:argument_list></ns0:call></ns0:expr> ;</ns0:expr_stmt> <ns0:expr_stmt><ns0:expr><ns0:name>palindrome</ns0:name> <ns0:operator>/=</ns0:operator> <ns0:literal type="number">10</ns0:literal></ns0:expr> ;</ns0:expr_stmt> </ns0:block_content>}</ns0:block></ns0:while> <ns0:expr_stmt><ns0:expr><ns0:call><ns0:name><ns0:name>System</ns0:name> <ns0:operator>.</ns0:operator> <ns0:name>out</ns0:name> <ns0:operator>.</ns0:operator> <ns0:name>println</ns0:name></ns0:name> <ns0:argument_list>( <ns0:argument><ns0:expr><ns0:literal type="string">" "</ns0:literal></ns0:expr></ns0:argument> )</ns0:argument_list></ns0:call></ns0:expr> ;</ns0:expr_stmt> </ns0:block_content>}</ns0:block></ns0:function>
</ns0:unit>