<ns0:unit xmlns:ns0="http://www.srcML.org/srcML/src" filename="experiment/original/PROGRAM_CENSOR_WORD_ASTERISKS_SENTENCE.java" language="Java" revision="1.0.0"><ns0:function><ns0:type><ns0:specifier>static</ns0:specifier> <ns0:name>String</ns0:name></ns0:type> <ns0:name>censor</ns0:name> <ns0:parameter_list>( <ns0:parameter><ns0:decl><ns0:type><ns0:name>String</ns0:name></ns0:type> <ns0:name>text</ns0:name></ns0:decl></ns0:parameter> , <ns0:parameter><ns0:decl><ns0:type><ns0:name>String</ns0:name></ns0:type> <ns0:name>word</ns0:name></ns0:decl></ns0:parameter> )</ns0:parameter_list> <ns0:block>{<ns0:block_content> <ns0:decl_stmt><ns0:decl><ns0:type><ns0:name><ns0:name>String</ns0:name> <ns0:index>[ ]</ns0:index></ns0:name></ns0:type> <ns0:name>word_list</ns0:name> <ns0:init>= <ns0:expr><ns0:call><ns0:name><ns0:name>text</ns0:name> <ns0:operator>.</ns0:operator> <ns0:name>split</ns0:name></ns0:name> <ns0:argument_list>( <ns0:argument><ns0:expr><ns0:literal type="string">" \\s + "</ns0:literal></ns0:expr></ns0:argument> )</ns0:argument_list></ns0:call></ns0:expr></ns0:init></ns0:decl> ;</ns0:decl_stmt> <ns0:decl_stmt><ns0:decl><ns0:type><ns0:name>String</ns0:name></ns0:type> <ns0:name>result</ns0:name> <ns0:init>= <ns0:expr><ns0:literal type="string">" "</ns0:literal></ns0:expr></ns0:init></ns0:decl> ;</ns0:decl_stmt> <ns0:decl_stmt><ns0:decl><ns0:type><ns0:name>String</ns0:name></ns0:type> <ns0:name>stars</ns0:name> <ns0:init>= <ns0:expr><ns0:literal type="string">" "</ns0:literal></ns0:expr></ns0:init></ns0:decl> ;</ns0:decl_stmt> <ns0:decl_stmt><ns0:decl><ns0:type><ns0:name>int</ns0:name></ns0:type> <ns0:name>index</ns0:name> <ns0:init>= <ns0:expr><ns0:literal type="number">0</ns0:literal></ns0:expr></ns0:init></ns0:decl> ;</ns0:decl_stmt> <ns0:for>for <ns0:control>( <ns0:init><ns0:decl><ns0:type><ns0:name>String</ns0:name></ns0:type> <ns0:name>i</ns0:name> <ns0:range>: <ns0:expr><ns0:name>word_list</ns0:name></ns0:expr></ns0:range></ns0:decl></ns0:init> )</ns0:control> <ns0:block>{<ns0:block_content> <ns0:if_stmt><ns0:if>if <ns0:condition>( <ns0:expr><ns0:call><ns0:name><ns0:name>i</ns0:name> <ns0:operator>.</ns0:operator> <ns0:name>compareTo</ns0:name></ns0:name> <ns0:argument_list>( <ns0:argument><ns0:expr><ns0:name>word</ns0:name></ns0:expr></ns0:argument> )</ns0:argument_list></ns0:call> <ns0:operator>==</ns0:operator> <ns0:literal type="number">0</ns0:literal></ns0:expr> )</ns0:condition><ns0:block type="pseudo"><ns0:block_content> <ns0:expr_stmt><ns0:expr><ns0:name><ns0:name>word_list</ns0:name> <ns0:index>[ <ns0:expr><ns0:name>index</ns0:name></ns0:expr> ]</ns0:index></ns0:name> <ns0:operator>=</ns0:operator> <ns0:name>stars</ns0:name></ns0:expr> ;</ns0:expr_stmt></ns0:block_content></ns0:block></ns0:if></ns0:if_stmt> <ns0:expr_stmt><ns0:expr><ns0:name>index</ns0:name> <ns0:operator>++</ns0:operator></ns0:expr> ;</ns0:expr_stmt> </ns0:block_content>}</ns0:block></ns0:for> <ns0:for>for <ns0:control>( <ns0:init><ns0:decl><ns0:type><ns0:name>String</ns0:name></ns0:type> <ns0:name>i</ns0:name> <ns0:range>: <ns0:expr><ns0:name>word_list</ns0:name></ns0:expr></ns0:range></ns0:decl></ns0:init> )</ns0:control><ns0:block type="pseudo"><ns0:block_content> <ns0:expr_stmt><ns0:expr><ns0:name>result</ns0:name> <ns0:operator>+=</ns0:operator> <ns0:name>i</ns0:name> <ns0:operator>+</ns0:operator> <ns0:literal type="char">' &#226;&#150;&#129; '</ns0:literal></ns0:expr> ;</ns0:expr_stmt></ns0:block_content></ns0:block></ns0:for> <ns0:return>return <ns0:expr><ns0:name>result</ns0:name></ns0:expr> ;</ns0:return> </ns0:block_content>}</ns0:block></ns0:function>
</ns0:unit>