<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/ZECKENDORFS_THEOREM_NON_NEIGHBOURING_FIBONACCI_REPRESENTATION.java"><function><type><specifier>public</specifier> <specifier>static</specifier> <name>int</name></type> <name>nearestSmallerEqFib</name> <parameter_list>( <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter> )</parameter_list> <block>{<block_content> <if_stmt><if>if <condition>( <expr><name>n</name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <name>n</name> <operator>==</operator> <literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>n</name></expr> ;</return></block_content></block></if></if_stmt> <decl_stmt><decl><type><name>int</name></type> <name>f1</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> , <decl><type ref="prev"/><name>f2</name> <init>= <expr><literal type="number">1</literal></expr></init></decl> , <decl><type ref="prev"/><name>f3</name> <init>= <expr><literal type="number">1</literal></expr></init></decl> ;</decl_stmt> <while>while <condition>( <expr><name>f3</name> <operator>&lt;=</operator> <name>n</name></expr> )</condition> <block>{<block_content> <expr_stmt><expr><name>f1</name> <operator>=</operator> <name>f2</name></expr> ;</expr_stmt> <expr_stmt><expr><name>f2</name> <operator>=</operator> <name>f3</name></expr> ;</expr_stmt> <expr_stmt><expr><name>f3</name> <operator>=</operator> <name>f1</name> <operator>+</operator> <name>f2</name></expr> ;</expr_stmt> </block_content>}</block></while> <return>return <expr><name>f2</name></expr> ;</return> </block_content>}</block></function>
</unit>
