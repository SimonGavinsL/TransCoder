<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/POSITIVE_ELEMENTS_EVEN_NEGATIVE_ODD_POSITIONS.java"><function><type><specifier>static</specifier> <name>void</name></type> <name>rearrange</name> <parameter_list>( <parameter><decl><type><name>int</name></type> <name><name>a</name> <index>[ ]</index></name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter> )</parameter_list> <block>{<block_content> <decl_stmt><decl><type><name>int</name></type> <name>positive</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> , <decl><type ref="prev"/><name>negative</name> <init>= <expr><literal type="number">1</literal></expr></init></decl> , <decl><type ref="prev"/><name>temp</name></decl> ;</decl_stmt> <while>while <condition>( <expr><literal type="boolean">true</literal></expr> )</condition> <block>{<block_content> <while>while <condition>( <expr><name>positive</name> <operator>&lt;</operator> <name>size</name> <operator>&amp;&amp;</operator> <name><name>a</name> <index>[ <expr><name>positive</name></expr> ]</index></name> <operator>&gt;=</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>positive</name> <operator>+=</operator> <literal type="number">2</literal></expr> ;</expr_stmt></block_content></block></while> <while>while <condition>( <expr><name>negative</name> <operator>&lt;</operator> <name>size</name> <operator>&amp;&amp;</operator> <name><name>a</name> <index>[ <expr><name>negative</name></expr> ]</index></name> <operator>&lt;=</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>negative</name> <operator>+=</operator> <literal type="number">2</literal></expr> ;</expr_stmt></block_content></block></while> <if_stmt><if>if <condition>( <expr><name>positive</name> <operator>&lt;</operator> <name>size</name> <operator>&amp;&amp;</operator> <name>negative</name> <operator>&lt;</operator> <name>size</name></expr> )</condition> <block>{<block_content> <expr_stmt><expr><name>temp</name> <operator>=</operator> <name><name>a</name> <index>[ <expr><name>positive</name></expr> ]</index></name></expr> ;</expr_stmt> <expr_stmt><expr><name><name>a</name> <index>[ <expr><name>positive</name></expr> ]</index></name> <operator>=</operator> <name><name>a</name> <index>[ <expr><name>negative</name></expr> ]</index></name></expr> ;</expr_stmt> <expr_stmt><expr><name><name>a</name> <index>[ <expr><name>negative</name></expr> ]</index></name> <operator>=</operator> <name>temp</name></expr> ;</expr_stmt> </block_content>}</block></if> <else>else<block type="pseudo"><block_content> <break>break ;</break></block_content></block></else></if_stmt> </block_content>}</block></while> </block_content>}</block></function>
</unit>
