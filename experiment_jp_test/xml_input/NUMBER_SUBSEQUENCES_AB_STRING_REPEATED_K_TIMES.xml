<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/NUMBER_SUBSEQUENCES_AB_STRING_REPEATED_K_TIMES.java"><function><type><specifier>static</specifier> <name>int</name></type> <name>countOccurrences</name> <parameter_list>( <parameter><decl><type><name>String</name></type> <name>s</name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>K</name></decl></parameter> )</parameter_list> <block>{<block_content> <decl_stmt><decl><type><name>int</name></type> <name>n</name> <init>= <expr><call><name><name>s</name> <operator>.</operator> <name>length</name></name> <argument_list>( )</argument_list></call></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name>C</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> , <decl><type ref="prev"/><name>c1</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> , <decl><type ref="prev"/><name>c2</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</decl_stmt> <for>for <control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr> )</control> <block>{<block_content> <if_stmt><if>if <condition>( <expr><call><name><name>s</name> <operator>.</operator> <name>charAt</name></name> <argument_list>( <argument><expr><name>i</name></expr></argument> )</argument_list></call> <operator>==</operator> <literal type="char">' a '</literal></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>c1</name> <operator>++</operator></expr> ;</expr_stmt></block_content></block></if></if_stmt> <if_stmt><if>if <condition>( <expr><call><name><name>s</name> <operator>.</operator> <name>charAt</name></name> <argument_list>( <argument><expr><name>i</name></expr></argument> )</argument_list></call> <operator>==</operator> <literal type="char">' b '</literal></expr> )</condition> <block>{<block_content> <expr_stmt><expr><name>c2</name> <operator>++</operator></expr> ;</expr_stmt> <expr_stmt><expr><name>C</name> <operator>+=</operator> <name>c1</name></expr> ;</expr_stmt> </block_content>}</block></if></if_stmt> </block_content>}</block></for> <return>return <expr><name>C</name> <operator>*</operator> <name>K</name> <operator>+</operator> <operator>(</operator> <name>K</name> <operator>*</operator> <operator>(</operator> <name>K</name> <operator>-</operator> <literal type="number">1</literal> <operator>)</operator> <operator>/</operator> <literal type="number">2</literal> <operator>)</operator> <operator>*</operator> <name>c1</name> <operator>*</operator> <name>c2</name></expr> ;</return> </block_content>}</block></function>
</unit>
