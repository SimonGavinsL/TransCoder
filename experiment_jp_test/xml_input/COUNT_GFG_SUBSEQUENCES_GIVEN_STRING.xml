<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/COUNT_GFG_SUBSEQUENCES_GIVEN_STRING.java"><function><type><specifier>static</specifier> <name>void</name></type> <name>countSubsequence</name> <parameter_list>( <parameter><decl><type><name>String</name></type> <name>s</name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter> )</parameter_list> <block>{<block_content> <decl_stmt><decl><type><name>int</name></type> <name>cntG</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> , <decl><type ref="prev"/><name>cntF</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> , <decl><type ref="prev"/><name>result</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> , <decl><type ref="prev"/><name>C</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</decl_stmt> <for>for <control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr> )</control> <block>{<block_content> <switch>switch <condition>( <expr><call><name><name>s</name> <operator>.</operator> <name>charAt</name></name> <argument_list>( <argument><expr><name>i</name></expr></argument> )</argument_list></call></expr> )</condition> <block>{<block_content> <case>case <expr><literal type="char">' G '</literal></expr> :</case> <expr_stmt><expr><name>cntG</name> <operator>++</operator></expr> ;</expr_stmt> <expr_stmt><expr><name>result</name> <operator>+=</operator> <name>C</name></expr> ;</expr_stmt> <break>break ;</break> <case>case <expr><literal type="char">' F '</literal></expr> :</case> <expr_stmt><expr><name>cntF</name> <operator>++</operator></expr> ;</expr_stmt> <expr_stmt><expr><name>C</name> <operator>+=</operator> <name>cntG</name></expr> ;</expr_stmt> <break>break ;</break> <default>default :</default> <continue>continue ;</continue> </block_content>}</block></switch> </block_content>}</block></for> <expr_stmt><expr><call><name><name>System</name> <operator>.</operator> <name>out</name> <operator>.</operator> <name>println</name></name> <argument_list>( <argument><expr><name>result</name></expr></argument> )</argument_list></call></expr> ;</expr_stmt> </block_content>}</block></function>
</unit>
