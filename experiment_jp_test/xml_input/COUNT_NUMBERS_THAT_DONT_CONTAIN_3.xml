<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/COUNT_NUMBERS_THAT_DONT_CONTAIN_3.java"><function><type><specifier>static</specifier> <name>int</name></type> <name>count</name> <parameter_list>( <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter> )</parameter_list> <block>{<block_content> <if_stmt><if>if <condition>( <expr><name>n</name> <operator>&lt;</operator> <literal type="number">3</literal></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>n</name></expr> ;</return></block_content></block></if></if_stmt> <if_stmt><if>if <condition>( <expr><name>n</name> <operator>&gt;=</operator> <literal type="number">3</literal> <operator>&amp;&amp;</operator> <name>n</name> <operator>&lt;</operator> <literal type="number">10</literal></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>n</name> <operator>-</operator> <literal type="number">1</literal></expr> ;</return></block_content></block></if></if_stmt> <decl_stmt><decl><type><name>int</name></type> <name>po</name> <init>= <expr><literal type="number">1</literal></expr></init></decl> ;</decl_stmt> <while>while <condition>( <expr><name>n</name> <operator>/</operator> <name>po</name> <operator>&gt;</operator> <literal type="number">9</literal></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>po</name> <operator>=</operator> <name>po</name> <operator>*</operator> <literal type="number">10</literal></expr> ;</expr_stmt></block_content></block></while> <decl_stmt><decl><type><name>int</name></type> <name>msd</name> <init>= <expr><name>n</name> <operator>/</operator> <name>po</name></expr></init></decl> ;</decl_stmt> <if_stmt><if>if <condition>( <expr><name>msd</name> <operator>!=</operator> <literal type="number">3</literal></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><call><name>count</name> <argument_list>( <argument><expr><name>msd</name></expr></argument> )</argument_list></call> <operator>*</operator> <call><name>count</name> <argument_list>( <argument><expr><name>po</name> <operator>-</operator> <literal type="number">1</literal></expr></argument> )</argument_list></call> <operator>+</operator> <call><name>count</name> <argument_list>( <argument><expr><name>msd</name></expr></argument> )</argument_list></call> <operator>+</operator> <call><name>count</name> <argument_list>( <argument><expr><name>n</name> <operator>%</operator> <name>po</name></expr></argument> )</argument_list></call></expr> ;</return></block_content></block></if> <else>else<block type="pseudo"><block_content> <return>return <expr><call><name>count</name> <argument_list>( <argument><expr><name>msd</name> <operator>*</operator> <name>po</name> <operator>-</operator> <literal type="number">1</literal></expr></argument> )</argument_list></call></expr> ;</return></block_content></block></else></if_stmt> </block_content>}</block></function>
</unit>
