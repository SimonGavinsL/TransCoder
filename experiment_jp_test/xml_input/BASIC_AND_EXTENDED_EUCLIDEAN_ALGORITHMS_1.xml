<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/BASIC_AND_EXTENDED_EUCLIDEAN_ALGORITHMS_1.java"><function><type><specifier>public</specifier> <specifier>static</specifier> <name>int</name></type> <name>gcdExtended</name> <parameter_list>( <parameter><decl><type><name>int</name></type> <name>a</name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>b</name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter> )</parameter_list> <block>{<block_content> <if_stmt><if>if <condition>( <expr><name>a</name> <operator>==</operator> <literal type="number">0</literal></expr> )</condition> <block>{<block_content> <expr_stmt><expr><name>x</name> <operator>=</operator> <literal type="number">0</literal></expr> ;</expr_stmt> <expr_stmt><expr><name>y</name> <operator>=</operator> <literal type="number">1</literal></expr> ;</expr_stmt> <return>return <expr><name>b</name></expr> ;</return> </block_content>}</block></if></if_stmt> <decl_stmt><decl><type><name>int</name></type> <name>x1</name> <init>= <expr><literal type="number">1</literal></expr></init></decl> , <decl><type ref="prev"/><name>y1</name> <init>= <expr><literal type="number">1</literal></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name>gcd</name> <init>= <expr><call><name>gcdExtended</name> <argument_list>( <argument><expr><name>b</name> <operator>%</operator> <name>a</name></expr></argument> , <argument><expr><name>a</name></expr></argument> , <argument><expr><name>x1</name></expr></argument> , <argument><expr><name>y1</name></expr></argument> )</argument_list></call></expr></init></decl> ;</decl_stmt> <expr_stmt><expr><name>x</name> <operator>=</operator> <name>y1</name> <operator>-</operator> <operator>(</operator> <name>b</name> <operator>/</operator> <name>a</name> <operator>)</operator> <operator>*</operator> <name>x1</name></expr> ;</expr_stmt> <expr_stmt><expr><name>y</name> <operator>=</operator> <name>x1</name></expr> ;</expr_stmt> <return>return <expr><name>gcd</name></expr> ;</return> </block_content>}</block></function>
</unit>
