<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/COUNT_POSSIBLE_WAYS_TO_CONSTRUCT_BUILDINGS.java"><function><type><specifier>static</specifier> <name>int</name></type> <name>countWays</name> <parameter_list>( <parameter><decl><type><name>int</name></type> <name>N</name></decl></parameter> )</parameter_list> <block>{<block_content> <if_stmt><if>if <condition>( <expr><name>N</name> <operator>==</operator> <literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><literal type="number">4</literal></expr> ;</return></block_content></block></if></if_stmt> <decl_stmt><decl><type><name>int</name></type> <name>countB</name> <init>= <expr><literal type="number">1</literal></expr></init></decl> , <decl><type ref="prev"/><name>countS</name> <init>= <expr><literal type="number">1</literal></expr></init></decl> , <decl><type ref="prev"/><name>prev_countB</name></decl> , <decl><type ref="prev"/><name>prev_countS</name></decl> ;</decl_stmt> <for>for <control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">2</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>N</name></expr> ;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr> )</control> <block>{<block_content> <expr_stmt><expr><name>prev_countB</name> <operator>=</operator> <name>countB</name></expr> ;</expr_stmt> <expr_stmt><expr><name>prev_countS</name> <operator>=</operator> <name>countS</name></expr> ;</expr_stmt> <expr_stmt><expr><name>countS</name> <operator>=</operator> <name>prev_countB</name> <operator>+</operator> <name>prev_countS</name></expr> ;</expr_stmt> <expr_stmt><expr><name>countB</name> <operator>=</operator> <name>prev_countS</name></expr> ;</expr_stmt> </block_content>}</block></for> <decl_stmt><decl><type><name>int</name></type> <name>result</name> <init>= <expr><name>countS</name> <operator>+</operator> <name>countB</name></expr></init></decl> ;</decl_stmt> <return>return <expr><operator>(</operator> <name>result</name> <operator>*</operator> <name>result</name> <operator>)</operator></expr> ;</return> </block_content>}</block></function>
</unit>
