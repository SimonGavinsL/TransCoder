<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/HOW_TO_AVOID_OVERFLOW_IN_MODULAR_MULTIPLICATION.java"><function><type><specifier>static</specifier> <name>long</name></type> <name>mulmod</name> <parameter_list>( <parameter><decl><type><name>long</name></type> <name>a</name></decl></parameter> , <parameter><decl><type><name>long</name></type> <name>b</name></decl></parameter> , <parameter><decl><type><name>long</name></type> <name>mod</name></decl></parameter> )</parameter_list> <block>{<block_content> <decl_stmt><decl><type><name>long</name></type> <name>res</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</decl_stmt> <expr_stmt><expr><name>a</name> <operator>=</operator> <name>a</name> <operator>%</operator> <name>mod</name></expr> ;</expr_stmt> <while>while <condition>( <expr><name>b</name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition> <block>{<block_content> <if_stmt><if>if <condition>( <expr><name>b</name> <operator>%</operator> <literal type="number">2</literal> <operator>==</operator> <literal type="number">1</literal></expr> )</condition> <block>{<block_content> <expr_stmt><expr><name>res</name> <operator>=</operator> <operator>(</operator> <name>res</name> <operator>+</operator> <name>a</name> <operator>)</operator> <operator>%</operator> <name>mod</name></expr> ;</expr_stmt> </block_content>}</block></if></if_stmt> <expr_stmt><expr><name>a</name> <operator>=</operator> <operator>(</operator> <name>a</name> <operator>*</operator> <literal type="number">2</literal> <operator>)</operator> <operator>%</operator> <name>mod</name></expr> ;</expr_stmt> <expr_stmt><expr><name>b</name> <operator>/=</operator> <literal type="number">2</literal></expr> ;</expr_stmt> </block_content>}</block></while> <return>return <expr><name>res</name> <operator>%</operator> <name>mod</name></expr> ;</return> </block_content>}</block></function>
</unit>
