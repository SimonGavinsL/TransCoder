<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/COUNT_MINIMUM_STEPS_GET_GIVEN_DESIRED_ARRAY.java"><function><type><specifier>static</specifier> <name>int</name></type> <name>countMinOperations</name> <parameter_list>( <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter> )</parameter_list> <block>{<block_content> <decl_stmt><decl><type><name>int</name></type> <name>result</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</decl_stmt> <while>while <condition>( <expr><literal type="boolean">true</literal></expr> )</condition> <block>{<block_content> <decl_stmt><decl><type><name>int</name></type> <name>zero_count</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name>i</name></decl> ;</decl_stmt> <for>for <control>( <init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr> )</control> <block>{<block_content> <if_stmt><if>if <condition>( <expr><name><name>arr</name> <index>[ <expr><name>i</name></expr> ]</index></name> <operator>%</operator> <literal type="number">2</literal> <operator>==</operator> <literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content> <break>break ;</break></block_content></block></if> <if type="elseif">else if <condition>( <expr><name><name>arr</name> <index>[ <expr><name>i</name></expr> ]</index></name> <operator>==</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>zero_count</name> <operator>++</operator></expr> ;</expr_stmt></block_content></block></if></if_stmt> </block_content>}</block></for> <if_stmt><if>if <condition>( <expr><name>zero_count</name> <operator>==</operator> <name>n</name></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>result</name></expr> ;</return></block_content></block></if></if_stmt> <if_stmt><if>if <condition>( <expr><name>i</name> <operator>==</operator> <name>n</name></expr> )</condition> <block>{<block_content> <for>for <control>( <init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name>n</name></expr> ;</condition> <incr><expr><name>j</name> <operator>++</operator></expr></incr> )</control><block type="pseudo"><block_content> <expr_stmt><expr><name><name>arr</name> <index>[ <expr><name>j</name></expr> ]</index></name> <operator>=</operator> <name><name>arr</name> <index>[ <expr><name>j</name></expr> ]</index></name> <operator>/</operator> <literal type="number">2</literal></expr> ;</expr_stmt></block_content></block></for> <expr_stmt><expr><name>result</name> <operator>++</operator></expr> ;</expr_stmt> </block_content>}</block></if></if_stmt> <for>for <control>( <init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><name>i</name></expr></init></decl> ;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name>n</name></expr> ;</condition> <incr><expr><name>j</name> <operator>++</operator></expr></incr> )</control> <block>{<block_content> <if_stmt><if>if <condition>( <expr><name><name>arr</name> <index>[ <expr><name>j</name></expr> ]</index></name> <operator>%</operator> <literal type="number">2</literal> <operator>==</operator> <literal type="number">1</literal></expr> )</condition> <block>{<block_content> <expr_stmt><expr><name><name>arr</name> <index>[ <expr><name>j</name></expr> ]</index></name> <operator>--</operator></expr> ;</expr_stmt> <expr_stmt><expr><name>result</name> <operator>++</operator></expr> ;</expr_stmt> </block_content>}</block></if></if_stmt> </block_content>}</block></for> </block_content>}</block></while> </block_content>}</block></function>
</unit>
