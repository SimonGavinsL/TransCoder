<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/DFS_N_ARY_TREE_ACYCLIC_GRAPH_REPRESENTED_ADJACENCY_LIST.java"><function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>dfs</name> <parameter_list>( <parameter><decl><type><name><name>LinkedList</name> <argument_list type="generic">&lt; <argument><name>Integer</name></argument> &gt;</argument_list></name></type> <name><name>list</name> <index>[ ]</index></name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>node</name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>arrival</name></decl></parameter> )</parameter_list> <block>{<block_content> <expr_stmt><expr><call><name><name>System</name> <operator>.</operator> <name>out</name> <operator>.</operator> <name>println</name></name> <argument_list>( <argument><expr><name>node</name></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <for>for <control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>list</name> <index>[ <expr><name>node</name></expr> ]</index></name> <operator>.</operator> <call><name>size</name> <argument_list>( )</argument_list></call></expr> ;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr> )</control> <block>{<block_content> <if_stmt><if>if <condition>( <expr><name><name>list</name> <index>[ <expr><name>node</name></expr> ]</index></name> <operator>.</operator> <call><name>get</name> <argument_list>( <argument><expr><name>i</name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>arrival</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>dfs</name> <argument_list>( <argument><expr><name>list</name></expr></argument> , <argument><expr><name><name>list</name> <index>[ <expr><name>node</name></expr> ]</index></name> <operator>.</operator> <call><name>get</name> <argument_list>( <argument><expr><name>i</name></expr></argument> )</argument_list></call></expr></argument> , <argument><expr><name>node</name></expr></argument> )</argument_list></call></expr> ;</expr_stmt></block_content></block></if></if_stmt> </block_content>}</block></for> </block_content>}</block></function>
</unit>
