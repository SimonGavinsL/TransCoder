<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/EXPONENTIAL_SQUARING_FAST_MODULO_MULTIPLICATION.java"><function><type><specifier>static</specifier> <name>long</name></type> <name>exponentiation</name> <parameter_list>( <parameter><decl><type><name>long</name></type> <name>base</name></decl></parameter> , <parameter><decl><type><name>long</name></type> <name>exp</name></decl></parameter> )</parameter_list> <block>{<block_content> <if_stmt><if>if <condition>( <expr><name>exp</name> <operator>==</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><literal type="number">1</literal></expr> ;</return></block_content></block></if></if_stmt> <if_stmt><if>if <condition>( <expr><name>exp</name> <operator>==</operator> <literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>base</name> <operator>%</operator> <name>N</name></expr> ;</return></block_content></block></if></if_stmt> <decl_stmt><decl><type><name>long</name></type> <name>t</name> <init>= <expr><call><name>exponentiation</name> <argument_list>( <argument><expr><name>base</name></expr></argument> , <argument><expr><name>exp</name> <operator>/</operator> <literal type="number">2</literal></expr></argument> )</argument_list></call></expr></init></decl> ;</decl_stmt> <expr_stmt><expr><name>t</name> <operator>=</operator> <operator>(</operator> <name>t</name> <operator>*</operator> <name>t</name> <operator>)</operator> <operator>%</operator> <name>N</name></expr> ;</expr_stmt> <if_stmt><if>if <condition>( <expr><name>exp</name> <operator>%</operator> <literal type="number">2</literal> <operator>==</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>t</name></expr> ;</return></block_content></block></if> <else>else<block type="pseudo"><block_content> <return>return <expr><operator>(</operator> <operator>(</operator> <name>base</name> <operator>%</operator> <name>N</name> <operator>)</operator> <operator>*</operator> <name>t</name> <operator>)</operator> <operator>%</operator> <name>N</name></expr> ;</return></block_content></block></else></if_stmt> </block_content>}</block></function>
</unit>
