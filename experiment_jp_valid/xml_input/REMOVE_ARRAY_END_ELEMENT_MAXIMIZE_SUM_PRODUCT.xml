<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="experiment/original/REMOVE_ARRAY_END_ELEMENT_MAXIMIZE_SUM_PRODUCT.java"><function><type><specifier>static</specifier> <name>int</name></type> <name>solve</name> <parameter_list>( <parameter><decl><type><name>int</name></type> <name><name>dp</name> <index>[ ]</index> <index>[ ]</index></name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name><name>a</name> <index>[ ]</index></name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>low</name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>high</name></decl></parameter> , <parameter><decl><type><name>int</name></type> <name>turn</name></decl></parameter> )</parameter_list> <block>{<block_content> <if_stmt><if>if <condition>( <expr><name>low</name> <operator>==</operator> <name>high</name></expr> )</condition> <block>{<block_content> <return>return <expr><name><name>a</name> <index>[ <expr><name>low</name></expr> ]</index></name> <operator>*</operator> <name>turn</name></expr> ;</return> </block_content>}</block></if></if_stmt> <if_stmt><if>if <condition>( <expr><name><name>dp</name> <index>[ <expr><name>low</name></expr> ]</index> <index>[ <expr><name>high</name></expr> ]</index></name> <operator>!=</operator> <literal type="number">0</literal></expr> )</condition> <block>{<block_content> <return>return <expr><name><name>dp</name> <index>[ <expr><name>low</name></expr> ]</index> <index>[ <expr><name>high</name></expr> ]</index></name></expr> ;</return> </block_content>}</block></if></if_stmt> <expr_stmt><expr><name><name>dp</name> <index>[ <expr><name>low</name></expr> ]</index> <index>[ <expr><name>high</name></expr> ]</index></name> <operator>=</operator> <call><name><name>Math</name> <operator>.</operator> <name>max</name></name> <argument_list>( <argument><expr><name><name>a</name> <index>[ <expr><name>low</name></expr> ]</index></name> <operator>*</operator> <name>turn</name> <operator>+</operator> <call><name>solve</name> <argument_list>( <argument><expr><name>dp</name></expr></argument> , <argument><expr><name>a</name></expr></argument> , <argument><expr><name>low</name> <operator>+</operator> <literal type="number">1</literal></expr></argument> , <argument><expr><name>high</name></expr></argument> , <argument><expr><name>turn</name> <operator>+</operator> <literal type="number">1</literal></expr></argument> )</argument_list></call></expr></argument> , <argument><expr><name><name>a</name> <index>[ <expr><name>high</name></expr> ]</index></name> <operator>*</operator> <name>turn</name> <operator>+</operator> <call><name>solve</name> <argument_list>( <argument><expr><name>dp</name></expr></argument> , <argument><expr><name>a</name></expr></argument> , <argument><expr><name>low</name></expr></argument> , <argument><expr><name>high</name> <operator>-</operator> <literal type="number">1</literal></expr></argument> , <argument><expr><name>turn</name> <operator>+</operator> <literal type="number">1</literal></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr> ;</expr_stmt> <return>return <expr><name><name>dp</name> <index>[ <expr><name>low</name></expr> ]</index> <index>[ <expr><name>high</name></expr> ]</index></name></expr> ;</return> </block_content>}</block></function>
</unit>
